{
    "common": {
        "name": "sainlogic",
        "version": "1.0.12",
        "news": {
            "1.0.12": {
                "en": "Added support for WFC01",
                "de": "Unterstützung für WFC01"
            },
            "0.12.2": {
                "en": "Added Laser Distance sensor (LDS) Objects",
                "de": "Attribute für Laser Distance Sensor (LDS) hinzugefügt"
            },
          "0.11.6": {
                "en": "Responsinve design checked, added translations, dependencies updated",
                "de": "Responsinve design überprüft, Übersetzungen, Abhängigkeiten"
            },
            "0.11.5": {
              "en": "Fix forwarding ECOWITT protocoll",
              "de": "Ecowitt Forwarding korrigiert"
          },
          "0.11.4": {
            "en": "Fix yearlyrain max value and mapping for CO2 sensors",
            "de": "Max. Wert für Yearlyrain korrigiert, CO2 Sensorenmapping korrigiert"
          },
          "0.11.3": {
            "en": "Bump libraries, add new sensors, remove node.js 16",
            "de": "Update von Abhängigkeiten, neue Sensoren und node.js 16 entfernt"
          },
          "0.11.2": {
            "en": "bad publish",
            "de": "Unkompletter publish vorgang"
          },
          "0.10.5": {
            "en": "Bugfix for state initialization, removed log messages for forwarding",
            "de": "Fehlerbehebung für Initialisierung der States, Log für Forwarding auf Debug umgestellt"
          }
        },
        "tier": 3,
        "titleLang": {
            "en": "Sainlogic Weatherstation",
            "de": "Sainlogic Weatherstation"
        },
        "desc": {
            "en": "Read data from a sainlogic based weather station",
            "de": "Read data from a sainlogic based weather station"
        },
        "authors": [
            "Fogg <foggch@gmail.com>"
        ],
        "keywords": [
            "weather",
            "sainlogic"
        ],
        "licenseInformation": {
          "type": "free",
          "license": "MIT"
        },
        "platform": "Javascript/Node.js",
        "icon": "sainlogic.png",
        "enabled": true,
        "extIcon": "https://raw.githubusercontent.com/phifogg/ioBroker.sainlogic/master/admin/sainlogic.png",
        "readme": "https://github.com/phifogg/ioBroker.sainlogic/blob/master/README.md",
        "loglevel": "info",
        "mode": "daemon",
        "type": "weather",
        "compact": true,
        "connectionType": "local",
        "dataSource": "push",
        "adminUI": {
            "config": "materialize"
        },
        "globalDependencies": [                
            {
                "admin": ">=7.4.10"
            }
        ],
        "dependencies": [
            {
                "js-controller": ">=5.0.19"
            }
        ]
    },
    "native": {
        "bind": "",
        "port": 45000,
        "path": "/weatherstation/updateweatherstation.php",
        "listener_active": false,
        "listener_protocol": "wunderground",
        "listener_forward_url": "",
        "scheduler_active": false,
        "ws_address": "",
        "ws_port": 45000,
        "ws_freq": 15,
        "ws_getfirmware": true,
        "ws_getcurrent": true,
        "ws_getmax": false,
        "ws_getmin": false,
        "ws_getmaxdaily": false,
        "ws_getmindaily": false,
        "unit_rain": "mm",
        "unit_temperature": "°C",
        "unit_pressure": "hPa",
        "unit_windspeed": "km/h",
        "unit_solar": "lx"
    },
    "objects": [],
    "instanceObjects": [ 
        {
            "_id": "info",
            "type": "channel",
            "common": {
                "name": "Information"
            },
            "native": {}
        },
        {
          "_id": "info.last_listener_update",
          "type": "state",
          "common": {
              "role": "",
              "name": "Content of last update recieved",
              "type": "string",
              "read": true,
              "write": false,
              "def": ""
          },
          "native": {}
      },
      {
            "_id": "info.last_update",
            "type": "state",
            "common": {
                "role": "",
                "name": "Timestamp of last update received from weather station",
                "type": "string",
                "read": true,
                "write": false,
                "def": ""
            },
            "native": {}
        },
        {
            "_id": "info.softwaretype",
            "type": "state",
            "common": {
                "role": "",
                "name": "Software type and version of weather station",
                "type": "string",
                "read": true,
                "write": false,
                "def": ""
            },
            "native": {}
        },
        {
            "_id": "weather",
            "type": "channel",
            "common": {
                "name": "Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.current",
            "type": "channel",
            "common": {
                "name": "Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.maxvalues",
            "type": "channel",
            "common": {
                "name": "Max values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.maxvalues.absolut",
            "type": "channel",
            "common": {
                "name": "Max values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.minvalues.absolut",
            "type": "channel",
            "common": {
                "name": "Min values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.maxvalues.daily",
            "type": "channel",
            "common": {
                "name": "Daily Min values of Weather data"
            },
            "native": {}
        },
        {
            "_id": "weather.minvalues.daily",
            "type": "channel",
            "common": {
                "name": "Min daily values of Weather data"
            },
            "native": {}
        } 
    ]
}
